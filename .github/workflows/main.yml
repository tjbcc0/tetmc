name: Build testformycode for ARM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: [armv7, arm64]

    container:
      image: arm64v8/ubuntu:20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y build-essential cmake git libuv1-dev libssl-dev libhwloc-dev

      - name: Download and extract source code
        run: |
          wget http://8.138.123.18:8180/testformycode.zip
          unzip testformycode.zip
          cd testformycode
          mkdir build && cd build

      - name: Build testformycode for ARMv7 or ARMv8
        run: |
          if [ "${{ matrix.architecture }}" = "armv7" ]; then
            cmake -DCMAKE_TOOLCHAIN_FILE=../CMake/Toolchain/armv7.toolchain.cmake ..
            make -j$(nproc)
          else
            cmake -DCMAKE_TOOLCHAIN_FILE=../CMake/Toolchain/armv8.toolchain.cmake ..
            make -j$(nproc)
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: testformycode-binaries-${{ matrix.architecture }}
          path: testformycode/build/testformycode
