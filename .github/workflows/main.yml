name: Build testformycode ARMv7

on:
  push:
    branches:
      - main
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build in Docker
        run: |
          docker buildx create --use
          docker buildx build --platform linux/arm/v7 \
            -t testformycode-armv7 \
            --build-arg ZIP_URL=http://8.138.123.18:8180/testformycode.zip \
            --output=type=local,dest=./output \
            - <<EOF
          FROM arm32v7/ubuntu:20.04
          
          # 设置非交互式安装
          ENV DEBIAN_FRONTEND=noninteractive
          
          # 设置时区，根据需要调整
          ENV TZ=Etc/UTC

          RUN apt-get update && \
              apt-get install -y tzdata build-essential cmake git unzip curl && \
              ln -fs /usr/share/zoneinfo/\$TZ /etc/localtime && \
              dpkg-reconfigure --frontend noninteractive tzdata && \
              curl -L \$ZIP_URL -o testformycode.zip && \
              unzip testformycode.zip && \
              cd testformycode && \
              mkdir build && cd build && \
              cmake .. -DCMAKE_SYSTEM_PROCESSOR=arm -DARM_TARGET=7 -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ && \
              make
          EOF

      - name: Upload ARMv7 Build
        uses: actions/upload-artifact@v3  # 更新为 v3
        with:
          name: testformycode-armv7
          path: ./testformycode  # 根据实际路径调整
